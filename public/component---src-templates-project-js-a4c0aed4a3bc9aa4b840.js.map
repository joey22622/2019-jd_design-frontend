{"version":3,"sources":["webpack:///./src/components/imageSlider.js","webpack:///./src/components/photoGrid.js","webpack:///./src/components/project.js","webpack:///./src/templates/project.js"],"names":["ImageSlider","props","style","width","slides","length","transform","activeSlide","index","className","main","underlay","arrowClasses","prev","onClick","e","preventDefault","changeSlide","arrowStyles","id","data-name","xmlns","viewBox","d","next","window","map","photo","i","key","data-index","gif","src","remote","fluid","caption","exLink","href","target","linkTitle","toggle","PhotoGrid","photoGridData","onMouseOver","changeSlides","onMouseEnter","toggleGIF","onMouseOut","Project","state","imageSlider","active","inactiveStyle","display","current","opacity","pointerEvents","inactive","data","sanityProject","dimmensions","thumbnail","socialLinks","buildSocialArr","projectSocial","behance","checkVar","urlBehance","dribbble","urlDribbble","github","urlGithub","setState","console","log","toggleSlider","a","b","handleDims","thumb","document","querySelector","w","offsetWidth","wToH","remoteStatic","buildPushSlide","arr","elem","slide","local","asset","title","push","buildSlidesArr","imgImage","imgGallery","image","j","height","componentDidMount","this","addEventListener","keyCode","render","link","url","rel","bodyData","body","split","slider","alt","projectType","client","tags","_id","p","tech","React","Component","query","bodyClass","coverPage","homeLink"],"mappings":"wJAwFeA,EAjFK,SAACC,GAEjB,IAAIC,EAAQ,CACVC,MAAUF,EAAMG,OAAOC,OAAlB,OACLC,UAAU,eAA0C,IAA1BL,EAAMM,YAAYC,MAAnC,OAIX,OACE,yBAAKC,UAAU,iBAAiBP,MAAOD,EAAMC,MAAMQ,MACjD,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,kBAAkBP,MAAOD,EAAMC,MAAMS,UAClD,yBAAKF,UAAW,iCAAiCR,EAAMW,aAAaC,MAClE,yBAAKJ,UAAU,qBACf,4BAASK,QAAS,SAACC,GAAMA,EAAEC,iBAAiBf,EAAMgB,YAAYhB,EAAMM,YAAYC,MAAQ,IAAKC,UAAU,aAAaP,MAAOD,EAAMiB,YAAYL,MAC3I,yBAAKM,GAAG,UAAUC,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,eAAc,+BAAa,6CAAyB,0BAAMb,UAAU,QAAQc,EAAE,kDAGjK,yBAAKd,UAAU,kBAEjB,yBAAKA,UAAW,iCAAkCR,EAAMW,aAAaY,MACrE,yBAAKf,UAAU,iBACf,yBAAKA,UAAU,qBACb,4BAAQK,QAAS,SAACC,GAAKA,EAAEC,iBAAiBf,EAAMgB,YAAYhB,EAAMM,YAAYC,MAAQ,IAAKC,UAAU,cAAcP,MAAOD,EAAMiB,YAAYM,MAC1I,yBAAKL,GAAG,UAAUC,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,eAAc,+BAAa,6CAAyB,0BAAMb,UAAU,QAAQc,EAAE,sDAKrK,yBAAKd,UAAU,eAAeP,MAAOD,EAAMC,MAAMuB,QACjD,yBAAKhB,UAAU,kBAAkBP,MAAOA,GAEvCD,EAAMG,OAAOsB,KAAI,SAACC,EAAOC,GAAR,OAChB,yBAAKC,IAAKD,EAAGE,aAAYF,EAAGnB,UAAU,sBACtC,yBAAKA,UAAU,oBAGXkB,EAAMI,IACL,yBAAKtB,UAAU,YAAW,yBAAKuB,IAAKL,EAAMM,UAEzC,kBAAC,IAAD,CAAOC,MAAOP,EAAMO,QAGtBP,EAAMQ,SAAWR,EAAMS,OACvB,yBAAK3B,UAAU,YAEbkB,EAAMS,OACJ,yBAAK3B,UAAU,aACb,uBAAG4B,KAAMV,EAAMS,OAAQE,OAAO,UAAUX,EAAMY,YAGhD,yBAAK9B,UAAU,oBAGjBkB,EAAMQ,QACJ,yBAAK1B,UAAU,gBACb,2BAAIkB,EAAMQ,UAGZ,yBAAK1B,UAAU,wBAInB,yBAAKA,UAAU,2BAWzB,yBAAKK,QAASb,EAAMuC,OAAQtC,MAAOD,EAAMC,MAAMS,SAAWF,UAAU,sBChD3DgC,EA1BG,SAACxC,GAGf,OACM,yBAAKQ,UAAU,cAChBR,EAAMyC,cAAchB,KAAI,SAACC,EAAOC,GAG/B,GAAGA,EAAI,EACP,OACA,yBAAKd,QAAS,WAAKb,EAAMuC,OAAOZ,IAAIC,IAAKD,EAAGe,YAAa,kBAAK1C,EAAM2C,aAAahB,IAAIE,aAAYF,EAAG1B,MAAOD,EAAMC,MAAOO,UAAU,cAE5HkB,EAAMI,IACL,yBAAKc,aAAc,kBAAM5C,EAAM6C,UAAUlB,IAAImB,WAAY,kBAAK9C,EAAM6C,UAAUlB,KAAK,yBAAKI,IAAKL,EAAMK,OAElG,kBAAC,IAAD,CAAOE,MAAOP,EAAMO,c,IC2UvBc,E,4JAzVbC,MAAQ,CACN7C,OAAS,GACT8C,YAAc,CACZC,QAAS,EACT5C,YAAc,GACd6C,cAAgB,CACdC,QAAS,QAEXnC,YAAc,CACZM,KAAO,GACPX,KAAO,IAETD,aAAe,CACbY,KAAI,GACJX,KAAI,IAENX,MAAQ,CACNoD,QAAU,CACR5C,KAAM,CACJ6C,QAAS,EACTC,cAAe,QAEjB7C,SAAU,CACRL,UAAU,oBACViD,QAAS,IAEX9B,OAAQ,CACNnB,UAAU,qBACViD,QAAS,IAGbJ,OAAS,CACPxC,SAAU,IAKZ8C,SAAW,CACT/C,KAAM,CAEJ6C,QAAS,EACTC,cAAe,QAEjB7C,SAAU,CACRL,UAAU,oBACViD,QAAS,IAEX9B,OAAQ,CACNnB,UAAU,qBACViD,QAAS,MAKjBG,KAAO,EAAKzD,MAAMyD,KAAKC,cACvBC,YAAc,GACdC,UAAY,CACV3D,MAAQ,IAEV4D,YAAc,I,EAIhBC,eAAiB,WACf,IAAMD,EAAc,EAAKb,MAAMa,YACzBJ,EAAO,EAAKzD,MAAMyD,KAAKC,cAAcK,cAC3CF,EAAYG,QAAU,EAAKC,UAAS,kBAAKR,EAAKS,cAAY,GAC1DL,EAAYM,SAAW,EAAKF,UAAS,kBAAKR,EAAKW,eAAa,GAC5DP,EAAYQ,OAAS,EAAKJ,UAAS,kBAAKR,EAAKa,aAAW,GACxD,EAAKC,SAAS,CAACV,eAAaW,QAAQC,IAAI,EAAKzB,MAAMa,e,EAErDa,aAAe,SAACnE,GACVA,IACFA,EAAQ,GAEV,IAAI0C,EAAc,EAAKD,MAAMC,YACvBC,GAAUD,EAAYC,OAC5BD,EAAYC,OAASA,EAClBA,GAEDD,EAAYhD,MAAMoD,QAAUJ,EAAYhD,MAAMiD,OAC9C,EAAKP,aAAapC,IAElB0C,EAAYhD,MAAMoD,QAAUJ,EAAYhD,MAAMuD,SAEhD,EAAKe,SAAS,CAACtB,iB,EA6BjBgB,SAAW,SAACU,EAAGC,GACb,IACE,OAAOD,IACP,MAAO7D,GACP,OAAO8D,I,EAIXC,WAAa,WACX,IAAIlB,EAAc,EAAKX,MAAMW,YACvBmB,EAAQ,EAAKb,UAAS,kBAAKc,SAASC,cAAc,8BAA2B,GAChFF,IACDnB,EAAYC,UAAY,CACtBqB,EAAIH,EAAMI,aAEZ,EAAKX,SAAS,CAACZ,gBAAa,WAE1B,EAAKwB,Y,EAIXtC,UAAY,SAAClB,GACX,IAAIxB,EAAS,EAAK6C,MAAM7C,OACrBA,EAAOwB,GAAGK,SAAW7B,EAAOwB,GAAGI,IAChC5B,EAAOwB,GAAGI,IAAM5B,EAAOwB,GAAGyD,aAEzBjF,EAAOwB,GAAGI,IAAM5B,EAAOwB,GAAGK,OAE7B,EAAKuC,SAAS,CAACpE,Y,EAEjBkF,eAAiB,SAACC,EAAKC,EAAM5D,GAC3B,IAAI6D,EAAQ,GACZA,EAAMjF,MAAQoB,EACd6D,EAAM1D,KAAM,EACTyD,EAAKvD,SACNwD,EAAMxD,OAAS,EAAKiC,UAAS,kBAAKsB,EAAKvD,SAAxB,KACfwD,EAAMJ,aAAe,EAAKnB,UAAS,kBAAKsB,EAAKH,eAAxB,KACrBI,EAAMzD,IAAM,EAAKkC,UAAS,kBAAKsB,EAAKH,eAAxB,KACZI,EAAM1D,KAAM,GAGd0D,EAAMvD,MAAQ,EAAKgC,UAAS,kBAAKsB,EAAKE,MAAMC,MAAMzD,SAAO,GAEzDuD,EAAMG,MAAQ,EAAK1B,UAAS,kBAAKsB,EAAKI,SAAO,GAC7CH,EAAMtD,QAAU,EAAK+B,UAAS,kBAAKsB,EAAKrD,WAAS,GACjDsD,EAAMrD,OAAS,EAAK8B,UAAS,kBAAKsB,EAAKpD,UAAQ,GAC/CqD,EAAMlD,UAAY,EAAK2B,UAAS,kBAAKsB,EAAKjD,YAAWkD,EAAMrD,QAC3DmD,EAAIM,KAAKJ,I,EAGXK,eAAiB,WACf,IAAI1F,EAAS,EAAK6C,MAAM7C,OACxB,EAAKkF,eAAelF,EAAO,EAAK6C,MAAMS,KAAKqC,SAAS,GAEjD,EAAK9C,MAAMS,KAAKsC,WAAW3F,OAAS,GACrC,EAAK4C,MAAMS,KAAKsC,WAAWtE,KAAI,SAACuE,EAAOrE,GACrC,IAAIsE,EAAItE,EAAI,EACZ,EAAK0D,eAAelF,EAAO6F,EAAMC,MAIrCzB,QAAQC,IAAItE,GACZ,EAAKoE,SAAS,CAACpE,WAAQ,WACrB,EAAK0E,iB,EAITlC,aAAc,SAACpC,GACb,GAAGA,GAAS,GAAKA,EAAQ,EAAKyC,MAAM7C,OAAOC,OAAO,CAChD,IAAI6C,EAAc,EAAKD,MAAMC,YAC7BA,EAAYhC,YAAYM,KAAO,GAC/B0B,EAAYhC,YAAYL,KAAO,GAC/BqC,EAAYtC,aAAaY,KAAzB,SACA0B,EAAYtC,aAAaC,KAAzB,SACAqC,EAAY3C,YAAc,EAAK0C,MAAM7C,OAAOI,GAC/B,IAAVA,GACH0C,EAAYhC,YAAYL,KAAO,CAC7B2C,cAAgB,OAChBD,QAAS,IAEXL,EAAYtC,aAAaC,KAAzB,IAEUL,IAAU,EAAKyC,MAAM7C,OAAOC,OAAO,IAC3C6C,EAAYhC,YAAYM,KAAO,CAC7BgC,cAAgB,OAChBD,QAAS,IAEXL,EAAYtC,aAAaY,KAAzB,IAEF,EAAKgD,SAAS,CAACtB,kB,EAInBkC,KAAO,WACL,IAAML,EAAQ,EAAK9B,MAAMY,UACzBkB,EAAM7E,MAAQ,CACZiG,OAAS,EAAKlD,MAAMW,YAAYC,UAAUqB,GAE5C,EAAKV,SAAS,CAACO,W,oHA5HjBqB,kBAAA,WAAoB,IAAD,OACjB3B,QAAQC,IAAI2B,KAAKpD,MAAMS,MACvB2C,KAAKtC,iBACLsC,KAAKP,iBACLrE,OAAO6E,iBAAiB,UAAS,WAC/B,EAAKxB,gBAEPE,SAASsB,iBAAiB,UAAU,SAACvF,GAChC,EAAKkC,MAAMC,YAAYC,QACxB,EAAKwB,kBAGTK,SAASsB,iBAAiB,SAAS,SAACvF,GAClC0D,QAAQC,IAAI,EAAKzB,MAAMC,YAAYC,QAChC,EAAKF,MAAMC,YAAYC,SACP,KAAdpC,EAAEwF,QACH,EAAK3D,aAAa,EAAKK,MAAMC,YAAY3C,YAAYC,MAAQ,GACvC,KAAdO,EAAEwF,QACV,EAAK3D,aAAa,EAAKK,MAAMC,YAAY3C,YAAYC,MAAQ,GACvC,KAAdO,EAAEwF,SACV,EAAK5B,oB,EA4Gf6B,OAAA,WAAU,IAAD,OAIDC,GAHgBJ,KAAKnC,UAAS,kBAAK,EAAKjB,MAAM7C,UAAO,GAG7CiG,KAAKnC,UAAS,kBAAK,EAAKjB,MAAMS,KAAKtB,OAAOsE,OAAI,IACtDd,EAAQS,KAAKnC,UAAS,kBAAK,EAAKjB,MAAMS,KAAKtB,OAAOwD,QAA1C,iBACRxD,EAASqE,EAAQ,uBAAGpE,KAAMoE,EAAMnE,OAAO,SAASqE,IAAI,sBAAsBf,MAAOA,GAAQA,GAA5E,GACbgB,EAAWP,KAAKnC,UAAS,kBAAK,EAAKjB,MAAMS,KAAKmD,KAAKC,MAAM,SAAO,GAmBpE,OACE,yBAAKrG,UAAU,sBACZ4F,KAAKpD,MAAM7C,OAAOC,QAEnB,kBAAC,EAAD,CAEE8C,OAAQkD,KAAKpD,MAAM8D,OACnBvE,OAAQ6D,KAAK1B,aACbvE,OAAQiG,KAAKpD,MAAM7C,OACnBG,YAAa8F,KAAKpD,MAAMC,YAAY3C,YACpCL,MAAOmG,KAAKpD,MAAMC,YAAYhD,MAAMoD,QACpCrC,YAAeoF,KAAKzD,aACpB1B,YAAemF,KAAKpD,MAAMC,YAAYhC,YACtCN,aAAgByF,KAAKpD,MAAMC,YAAYtC,aACvCsD,SAAYmC,KAAKnC,WAGnB,yBAAKzD,UAAU,sBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oBACd4F,KAAKpD,MAAM7C,OAAOC,OAAS,GAC1B,yBAAKS,QAAS,WAAK,EAAK6D,aAAa,IAAMhC,YAAa,WAAK,EAAKC,aAAa,GAAI,EAAKE,UAAU,IAAKC,WAAY,WAAK,EAAKD,UAAU,IAAKjB,IAAK,EAAGC,aAAY,EAAG5B,MAAOmG,KAAKpD,MAAMY,UAAU3D,MAAOO,UAAU,yBAE9M4F,KAAKpD,MAAM7C,OAAO,GAAG2B,IACrB,6BAAK,yBAAKC,IAAKqE,KAAKpD,MAAM7C,OAAO,GAAG4B,OAEpCqE,KAAKpD,MAAM7C,OAAO,IAAM,kBAAC,IAAD,CAAO8B,MAAOmE,KAAKpD,MAAM7C,OAAO,GAAG8B,MAAO8E,IAAKX,KAAKpD,MAAM7C,OAAO,GAAGwF,SAI9F,kBAAC,EAAD,CACEpD,OAAU6D,KAAK1B,aACf7B,UAAauD,KAAKvD,UAClBJ,cAAiB2D,KAAKnC,UAAS,kBAAK,EAAKjB,MAAM7C,SAAO,IACtDwC,aAAgByD,KAAKzD,aACrB1C,MAASmG,KAAKpD,MAAMY,UAAU3D,WAOtC,yBAAKO,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gBACb,4BAAI,0BAAMA,UAAU,gBAAgB4F,KAAKpD,MAAMS,KAAKuD,YAAYrB,OAAhE,IAA8E,0BAAMnF,UAAU,gBAAgB4F,KAAKpD,MAAMS,KAAKkC,QAC9H,uBAAGnF,UAAU,kBAAiB,yCAA9B,IAAqD4F,KAAKpD,MAAMS,KAAKwD,OAAOtB,OAC5E,wBAAInF,UAAU,gBAEV4F,KAAKpD,MAAMS,KAAKyD,KAAK9G,OAAS,GAAKgG,KAAKpD,MAAMS,KAAKyD,KAAKzF,KAAI,SAAC8D,EAAM5D,GAAP,OAC5D,wBAAIC,IAAK2D,EAAK4B,IAAK3G,UAAU,eAAkB+E,EAAKI,OAAQhE,EAAI,EAAKqB,MAAMS,KAAKyD,KAAK9G,OAAO,EAAhC,cAG/D+B,GAEH,yBAAK3B,UAAU,qBAzEtBmG,EAED,yBAAKnG,UAAU,gBACdmG,EAASlF,KAAI,SAAC2F,EAAEzF,GAAH,OACZ,uBAAGC,IAAKD,GAAIyF,OAKN,IAmEA,yBAAK5G,UAAU,uBACb,yBAAKA,UAAU,qBACZ4F,KAAKpD,MAAMa,YAAYQ,QACxB,yBAAK7D,UAAU,wBACb,uBAAG4B,KAAMgE,KAAKpD,MAAMa,YAAYQ,OAAQqC,IAAI,sBAAsBrE,OAAO,SAASsD,MAAM,oBAAoBnF,UAAU,eACtH,uBAAGA,UAAU,qBAAoBmB,GAAC,MAGnCyE,KAAKpD,MAAMa,YAAYM,UACxB,yBAAK3D,UAAU,yBACb,uBAAG4B,KAAMgE,KAAKpD,MAAMa,YAAYM,SAAUuC,IAAI,sBAAsBrE,OAAO,SAASsD,MAAM,gBAAgBnF,UAAU,eACpH,uBAAGA,UAAU,uBAAsBmB,GAAC,MAGrCyE,KAAKpD,MAAMa,YAAYG,SACxB,yBAAKxD,UAAU,uBACb,uBAAG4B,KAAMgE,KAAKpD,MAAMa,YAAYG,QAAS0C,IAAI,sBAAsBrE,OAAO,SAASsD,MAAM,eAAenF,UAAU,eAClH,uBAAGA,UAAU,sBAAqBmB,GAAC,QAKzC,yBAAKnB,UAAU,QACb,uCACF,wBAAIA,UAAU,aAER4F,KAAKpD,MAAMS,KAAK4D,KAAKjH,OAAS,GAAKgG,KAAKpD,MAAMS,KAAK4D,KAAK5F,KAAI,SAAC8D,EAAM5D,GAAP,OAC5D,wBAAInB,UAAU,kBAAqB+E,EAAKI,OAAQhE,EAAI,EAAKqB,MAAMS,KAAK4D,KAAKjH,OAAO,EAAhC,oB,GAzU9CkH,IAAMC,WCP5B,sCAMO,IAAMC,EAAK,aAgEH,0BAAG/D,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAGEgE,UAAU,UAEVC,WAAW,EACXC,SAAU,SACVlE,KAAM,kBAAC,EAAD,CAASA,KAAMA,KAET,4BAAKA,EAAKC,cAAciC","file":"component---src-templates-project-js-a4c0aed4a3bc9aa4b840.js","sourcesContent":["\nimport React from \"react\"\n// import { Slide } from 'react-slideshow-image'\nimport Image from 'gatsby-image'\n\n\n\nconst ImageSlider = (props) => {\n    // const transition = props.transition;\n    let style = {\n      width: `${props.slides.length}00vw`,\n      transform: `translateX(-${props.activeSlide.index * 100}vw)`,\n    }\n\n   \n    return(\n      <div className=\"slider-wrapper\" style={props.style.main}>\n        <div className=\"slider-inner\">\n          <div className=\"arrow-container\" style={props.style.underlay}>\n            <div className={\"button-wrap-outer button-prev \"+props.arrowClasses.prev} >\n              <div className=\"button-wrap-inner\">\n              <button  onClick={(e)=>{ e.preventDefault();props.changeSlide(props.activeSlide.index - 1)}} className=\"arrow-left\" style={props.arrowStyles.prev}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\"><defs></defs><title>arrow_prev</title><path className=\"cls-1\" d=\"M88.5,250l323-234.47L196.5,250l215,234.47Z\"/></svg>\n              </button>\n              </div>        \n              <div className=\"arrow-streak\"></div>\n            </div>\n            <div className={\"button-wrap-outer button-next \"+ props.arrowClasses.next}>\n            <div className=\"arrow-streak\"></div>\n            <div className=\"button-wrap-inner\">\n              <button onClick={(e)=>{e.preventDefault();props.changeSlide(props.activeSlide.index + 1)}} className=\"arrow-right\" style={props.arrowStyles.next}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\"><defs></defs><title>arrow_next</title><path className=\"cls-1\" d=\"M411.5,250,88.5,484.47,303.5,250,88.5,15.53Z\"/></svg>\n              </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"slide-window\" style={props.style.window}>\n          <div className=\"slide-container\" style={style}>\n          \n          {props.slides.map((photo, i )=>(\n            <div key={i} data-index={i} className=\"project-slide-wrap\">\n            <div className=\"slide-wrap-inner\">\n              {/* <Image fluid={photo.fluid}></Image>  */}\n              {\n                photo.gif ?\n                (<div className=\"gif-wrap\"><img src={photo.remote}/></div>)\n                :\n                  <Image fluid={photo.fluid}/>              \n              }\n              {\n                photo.caption || photo.exLink ?\n                <div className=\"text-box\">\n                   {\n                  photo.exLink ?\n                    <div className=\"link-wrap\">\n                      <a href={photo.exLink} target=\"_blank\">{photo.linkTitle}</a>\n                    </div>\n                    :\n                    <div className=\"link-wrap empty\"/>\n                  }\n                  {\n                  photo.caption ?\n                    <div className=\"caption-wrap\">\n                      <p>{photo.caption}</p>\n                    </div>\n                    :\n                    <div className=\"caption-wrap empty\"/>\n                  }\n                </div>\n                :\n                <div className=\"text-box empty\"/>\n              }\n\n\n            </div>\n        </div>\n\n        ))}\n      </div>\n      </div>\n      </div>\n      <div onClick={props.toggle} style={props.style.underlay}  className=\"slider-underlay\"></div>\n    </div>\n    )\n  }\n\n\n\nexport default ImageSlider; \n  \n","\nimport React from \"react\"\n// import { Slide } from 'react-slideshow-image'\nimport Image from 'gatsby-image'\n\n\n\nconst PhotoGrid = (props) => {\n    // console.log(props.photoGridData)\n    // const photoGrid = buildPhotoGrid();\n    return(\n          <div className=\"photo-grid\">  \n        {props.photoGridData.map((photo, i)=>{\n          // const j = parseFloat(i+1);\n          // console.log(photo)\n          if(i > 0){\n          return(\n          <div onClick={()=>{props.toggle(i)}}key={i} onMouseOver={()=> props.changeSlides(i)} data-index={i} style={props.style} className=\"slide-wrap\">\n              {\n                photo.gif ?\n                (<div onMouseEnter={()=>  props.toggleGIF(i)} onMouseOut={()=> props.toggleGIF(i)} ><img src={photo.src}/></div>)\n                :\n                  <Image fluid={photo.fluid}/>\n                }\n\n          </div>  \n          )}})}\n  \n        </div>\n    )\n  }\n\n\nexport default PhotoGrid; \n  \n","import React from 'react'\nimport Image from 'gatsby-image'\nimport ImageSlider from './imageSlider'\nimport PhotoGrid from './photoGrid'\n\n\n//  const Layout = ({children}) => {\nclass Project extends React.Component{\n  state = {\n    slides : [],\n    imageSlider : {\n      active : false,\n      activeSlide : {},\n      inactiveStyle : {\n        display: 'none'\n      },\n      arrowStyles : {\n        next : {},\n        prev : {}\n      },\n      arrowClasses : {\n        next : ``,\n        prev : ``\n      },\n      style : {\n        current : {\n          main: {\n            opacity: 0,\n            pointerEvents: \"none\"\n          },\n          underlay :{\n            transform: `translateY(100vh)`,\n            opacity: 0.8,\n          },\n          window :{\n            transform: `translateY(-100vh)`,\n            opacity: 0\n          }\n        },\n        active : {\n          underlay :{\n            // transform: `translateY(100vh)`,\n            // opacity: 0,\n          }\n        },\n        inactive : {\n          main: {\n            // display: 'none',\n            opacity: 0,\n            pointerEvents: \"none\"\n          },\n          underlay :{\n            transform: `translateY(100vh)`,\n            opacity: 0.4,\n          },\n          window :{\n            transform: `translateY(-100vh)`,\n            opacity: 0\n          }\n        }\n      }\n    },\n    data : this.props.data.sanityProject,\n    dimmensions : {},\n    thumbnail : {\n      style : {}\n    },\n    socialLinks : {}\n  }\n  \n  \n  buildSocialArr = () => {\n    const socialLinks = this.state.socialLinks;\n    const data = this.props.data.sanityProject.projectSocial;\n    socialLinks.behance = this.checkVar(()=> data.urlBehance, false)\n    socialLinks.dribbble = this.checkVar(()=> data.urlDribbble, false)\n    socialLinks.github = this.checkVar(()=> data.urlGithub, false)\n    this.setState({socialLinks},console.log(this.state.socialLinks))\n  }\n  toggleSlider = (index) => {\n    if(!index){\n      index = 0\n    }\n    let imageSlider = this.state.imageSlider;\n    const active = !imageSlider.active;\n    imageSlider.active = active;\n    if(active){\n      // imageSlider.style = imageSlider.activeStyle\n      imageSlider.style.current = imageSlider.style.active;\n      this.changeSlides(index)\n    } else {\n      imageSlider.style.current = imageSlider.style.inactive;\n    }\n    this.setState({imageSlider})\n  }\n  \n  componentDidMount(){\n    console.log(this.state.data)\n    this.buildSocialArr()\n    this.buildSlidesArr()\n    window.addEventListener(\"resize\",()=>{\n      this.handleDims()\n    });\n    document.addEventListener(\"scroll\", (e)=>{\n      if(this.state.imageSlider.active){\n        this.toggleSlider();\n      }\n    })\n    document.addEventListener(\"keyup\", (e)=>{\n      console.log(this.state.imageSlider.active);\n      if(this.state.imageSlider.active){\n        if(e.keyCode === 37){\n          this.changeSlides(this.state.imageSlider.activeSlide.index - 1);\n        } else if(e.keyCode === 39){\n          this.changeSlides(this.state.imageSlider.activeSlide.index + 1);\n        } else if(e.keyCode === 27){\n          this.toggleSlider();\n        }\n      }\n    })\n\n  }\n  checkVar = (a, b) => {\n    try{\n      return a()\n    } catch (e) {\n      return b\n    }\n  }\n  \n  handleDims = () =>{\n    let dimmensions = this.state.dimmensions;\n    const thumb = this.checkVar(()=> document.querySelector(\".photo-grid .slide-wrap\"),false)\n    if(thumb){\n      dimmensions.thumbnail = {\n        w : thumb.offsetWidth\n      }\n      this.setState({dimmensions},()=>{\n        //dimmension dependent callbacks\n        this.wToH()\n      })\n    }\n  }\n  toggleGIF = (i) => {\n    let slides = this.state.slides;\n    if(slides[i].remote === slides[i].src){\n      slides[i].src = slides[i].remoteStatic\n    } else {\n       slides[i].src = slides[i].remote\n    }\n    this.setState({slides});\n  }\n  buildPushSlide = (arr, elem, i) => {\n    let slide = {}\n    slide.index = i;\n    slide.gif = false\n    if(elem.remote){\n      slide.remote = this.checkVar(()=> elem.remote, `#`)\n      slide.remoteStatic = this.checkVar(()=> elem.remoteStatic, `#`)\n      slide.src = this.checkVar(()=> elem.remoteStatic, `#`)\n      slide.gif = true\n    // } else if(elem.local.asset.fluid) {\n    }\n    slide.fluid = this.checkVar(()=> elem.local.asset.fluid, false);\n\n    slide.title = this.checkVar(()=> elem.title, false);\n    slide.caption = this.checkVar(()=> elem.caption, false);\n    slide.exLink = this.checkVar(()=> elem.exLink, false);\n    slide.linkTitle = this.checkVar(()=> elem.linkTitle, slide.exLink);\n    arr.push(slide);\n  }\n\n  buildSlidesArr = () => {\n    let slides = this.state.slides;\n    this.buildPushSlide(slides,this.state.data.imgImage,0);\n\n    if(this.state.data.imgGallery.length > 0){\n      this.state.data.imgGallery.map((image, i)=>{\n        let j = i + 1;\n        this.buildPushSlide(slides,image,j)\n\n      })\n    }\n    console.log(slides);\n    this.setState({slides},()=>{\n      this.handleDims()\n    })\n  }\n\n  changeSlides =(index) => {\n    if(index >= 0 && index < this.state.slides.length){\n      let imageSlider = this.state.imageSlider;\n      imageSlider.arrowStyles.next = {};\n      imageSlider.arrowStyles.prev = {};\n      imageSlider.arrowClasses.next = `active`;\n      imageSlider.arrowClasses.prev = `active`;\n      imageSlider.activeSlide = this.state.slides[index];\n      if(index === 0){\n      imageSlider.arrowStyles.prev = {\n        pointerEvents : 'none',\n        opacity: 0.1\n      }\n      imageSlider.arrowClasses.prev = ``\n\n      } else if(index === this.state.slides.length-1){\n        imageSlider.arrowStyles.next = {\n          pointerEvents : 'none',\n          opacity: 0.1\n        }\n        imageSlider.arrowClasses.next = ``\n      }\n      this.setState({imageSlider});\n    }\n  }\n\n  wToH = () => {\n    const thumb = this.state.thumbnail;\n    thumb.style = {\n      height : this.state.dimmensions.thumbnail.w\n    }\n    this.setState({thumb})\n\n  }\n\nrender() {\n  const photoGridData = this.checkVar(()=> this.state.slides,false);\n\n\n  const link =  this.checkVar(()=> this.state.data.exLink.url,false);\n  const title = this.checkVar(()=> this.state.data.exLink.title, `Visit Website`);\n  const exLink = link ? (<a href={link} target=\"_blank\" rel=\"noopener noreferrer\" title={title}>{title}</a>) : ``\n  const bodyData = this.checkVar(()=> this.state.data.body.split('\\n'), false);\n  const body = () => {\n    if(bodyData){\n      return(\n      <div className=\"project-body\">\n      {bodyData.map((p,i)=>(\n        <p key={i}>{p}</p>\n        \n      ))}\n      </div>\n      )} else {\n        return ``;\n      }\n  }\n  // const techData = this.state.data.\n  \n\n\n\n    return ( \n      <div className=\"project-wrap-outer\">\n        {this.state.slides.length &&\n\n        <ImageSlider\n          // properties = {this.state.imageSlider}\n          active={this.state.slider}\n          toggle={this.toggleSlider}\n          slides={this.state.slides}\n          activeSlide={this.state.imageSlider.activeSlide}\n          style={this.state.imageSlider.style.current}\n          changeSlide = {this.changeSlides}\n          arrowStyles = {this.state.imageSlider.arrowStyles}\n          arrowClasses = {this.state.imageSlider.arrowClasses}\n          checkVar = {this.checkVar}\n        />\n        }\n        <div className=\"project-wrap-inner\">\n          <div className=\"project-left\">\n            <div className=\"photo-grid-wrap\">\n              <div className=\"photo-grid-inner\">\n              {this.state.slides.length > 0 &&\n                <div onClick={()=>{this.toggleSlider(0)}}  onMouseOver={()=>{this.changeSlides(0); this.toggleGIF(0)}} onMouseOut={()=>{this.toggleGIF(0)}} key={1} data-index={0} style={this.state.thumbnail.style} className=\"slide-wrap feat-image\">\n                  {\n                  this.state.slides[0].gif ?\n                  <div><img src={this.state.slides[0].src}/></div>\n                  :\n                  this.state.slides[0] && <Image fluid={this.state.slides[0].fluid} alt={this.state.slides[0].title}/>\n                  }\n                </div>\n                  }                  \n                <PhotoGrid\n                  toggle = {this.toggleSlider}\n                  toggleGIF = {this.toggleGIF}\n                  photoGridData = {this.checkVar(()=> this.state.slides,[])}\n                  changeSlides = {this.changeSlides}\n                  style = {this.state.thumbnail.style}\n                />\n              </div>\n            </div>\n\n\n          </div>\n          <div className=\"project-right\">\n            <div className=\"project-right-inner\">\n              <div className=\"project-head\">\n                <h1><span className=\"project-type\">{this.state.data.projectType.title}</span> <span className=\"project-name\">{this.state.data.title}</span></h1>\n                <p className=\"project-client\"><label>Client</label> {this.state.data.client.title}</p>\n                <ul className=\"project-tags\">\n                  {\n                    this.state.data.tags.length > 0 && this.state.data.tags.map((elem, i)=>(\n                    <li key={elem._id} className=\"project-tag\">{`${elem.title}${i < this.state.data.tags.length-1 ? `, ` : ``}`}</li>)\n                    )}\n                </ul>\n                {exLink}\n              </div>\n              <div className=\"project-body-wrap\">\n              {body()}\n              </div>\n              <div className=\"project-social-wrap\">\n                <div className=\"social-inner-wrap\">\n                  {this.state.socialLinks.github && \n                  <div className=\"social-icon git-icon\">\n                    <a href={this.state.socialLinks.github} rel=\"noopener noreferrer\" target=\"_blank\" title=\"GitHub Repository\" className=\"social-link\">\n                    <i className=\"icon-social_github\"i/>\n                    </a>\n                  </div>}\n                  {this.state.socialLinks.dribbble && \n                  <div className=\"social-icon drib-icon\">\n                    <a href={this.state.socialLinks.dribbble} rel=\"noopener noreferrer\" target=\"_blank\" title=\"Dribbble Post\" className=\"social-link\">\n                    <i className=\"icon-social_dribbble\"i/>\n                    </a>\n                  </div>}\n                  {this.state.socialLinks.behance && \n                  <div className=\"social-icon be-icon\">\n                    <a href={this.state.socialLinks.behance} rel=\"noopener noreferrer\" target=\"_blank\" title=\"Behance Post\" className=\"social-link\">\n                    <i className=\"icon-social_behance\"i/>\n                    </a>\n                  </div>}\n                </div>\n              </div>\n              <div className=\"tech\">\n                <label>Tech</label>\n              <ul className=\"tech-list\">\n                  {\n                    this.state.data.tech.length > 0 && this.state.data.tech.map((elem, i)=>(\n                    <li className=\"tech-list-item\">{`${elem.title}${i < this.state.data.tech.length-1 ? `, ` : ``}`}</li>\n                    ))\n                  }\n              </ul>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      \n    )\n  }\n}\n\n\nexport default Project\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/layout\"\nimport Project from \"../components/project\"\n\n\nexport const query = graphql`\n    query ($slug : String) {\n        sanityProject(slug : {current : {eq : $slug}}){\n          title\n          projectType {\n            title\n          }\n          client {\n            title\n          }\n          body\n          exLink{\n            title\n            url\n          }\n          imgImage {\n            _key\n            local {\n              asset {\n                fluid{\n                  ...GatsbySanityImageFluid\n                }\n              }\n            }\n            title\n            caption\n            remote\n            remoteStatic\n            exLink\n            linkTitle\n          }\n          imgGallery{\n            _key\n            local{\n              asset {\n                fluid {\n                  ...GatsbySanityImageFluid\n                }\n              }\n            }\n            title\n            caption\n            remote\n            remoteStatic\n            exLink\n            linkTitle\n          }\n          projectSocial{\n            urlGithub\n            urlDribbble\n            urlBehance\n          }\n          tags{\n            id\n            title\n          }\n          tech{\n            id\n            title\n          }\n        }\n      }   \n  `\n\nexport default ({ data }) => (\n      <Layout\n        // pathname={window.location.pathname}\n        // search={window.location.search}\n        bodyClass=\"project\"\n        \n        coverPage={false}\n        homeLink={'/?home'}\n        data={<Project data={data}/>}\n      >\n                    <h1>{data.sanityProject.title}</h1>\n\n      </Layout>\n  )\n\n  "],"sourceRoot":""}