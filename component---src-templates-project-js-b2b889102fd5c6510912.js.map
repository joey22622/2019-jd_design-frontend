{"version":3,"sources":["webpack:///./src/components/imageSlider.js","webpack:///./src/components/photoGrid.js","webpack:///./src/components/project.js","webpack:///./src/templates/project.js"],"names":["ImageSlider","props","style","width","slides","length","transform","activeSlide","index","className","main","underlay","arrowClasses","prev","onClick","e","preventDefault","changeSlide","arrowStyles","id","data-name","xmlns","viewBox","d","next","window","map","photo","i","key","data-index","fluid","toggle","PhotoGrid","photoGridData","onMouseOver","changeSlides","Project","state","imageSlider","active","inactiveStyle","display","current","opacity","pointerEvents","inactive","data","sanityProject","dimmensions","thumbnail","toggleSlider","console","log","setState","checkVar","a","b","handleDims","thumb","document","querySelector","w","offsetWidth","wToH","buildSlidesArr","slide","imgImage","local","asset","push","imgGallery","image","height","componentDidUpdate","componentDidMount","this","addEventListener","keyCode","render","link","exLink","url","title","href","target","bodyData","_rawBody","split","slider","projectType","client","p","React","Component","query","bodyClass","coverPage","homeLink"],"mappings":"wJAyDeA,EAlDK,SAACC,GAEjB,IAAIC,EAAQ,CACVC,MAAUF,EAAMG,OAAOC,OAAlB,OACLC,UAAU,eAA0C,IAA1BL,EAAMM,YAAYC,MAAnC,OAIX,OACE,yBAAKC,UAAU,iBAAiBP,MAAOD,EAAMC,MAAMQ,MACjD,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,kBAAkBP,MAAOD,EAAMC,MAAMS,UAClD,yBAAKF,UAAW,iCAAiCR,EAAMW,aAAaC,MAClE,yBAAKJ,UAAU,qBACf,4BAASK,QAAS,SAACC,GAAMA,EAAEC,iBAAiBf,EAAMgB,YAAYhB,EAAMM,YAAYC,MAAQ,IAAKC,UAAU,aAAaP,MAAOD,EAAMiB,YAAYL,MAC3I,yBAAKM,GAAG,UAAUC,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,eAAc,+BAAa,6CAAyB,0BAAMb,UAAU,QAAQc,EAAE,kDAGjK,yBAAKd,UAAU,kBAEjB,yBAAKA,UAAW,iCAAkCR,EAAMW,aAAaY,MACrE,yBAAKf,UAAU,iBACf,yBAAKA,UAAU,qBACb,4BAAQK,QAAS,SAACC,GAAKA,EAAEC,iBAAiBf,EAAMgB,YAAYhB,EAAMM,YAAYC,MAAQ,IAAKC,UAAU,cAAcP,MAAOD,EAAMiB,YAAYM,MAC1I,yBAAKL,GAAG,UAAUC,YAAU,UAAUC,MAAM,6BAA6BC,QAAQ,eAAc,+BAAa,6CAAyB,0BAAMb,UAAU,QAAQc,EAAE,sDAKrK,yBAAKd,UAAU,eAAeP,MAAOD,EAAMC,MAAMuB,QACjD,yBAAKhB,UAAU,kBAAkBP,MAAOA,GAEvCD,EAAMG,OAAOsB,KAAI,SAACC,EAAOC,GAAR,OAChB,yBAAKC,IAAKD,EAAGE,aAAYF,EAAGnB,UAAU,sBACtC,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAOsB,MAAOJ,EAAMI,gBAQ5B,yBAAKjB,QAASb,EAAM+B,OAAQ9B,MAAOD,EAAMC,MAAMS,SAAWF,UAAU,sBCvB3DwB,EApBG,SAAChC,GAGf,OACM,yBAAKQ,UAAU,cAChBR,EAAMiC,cAAcR,KAAI,SAACC,EAAOC,GAG/B,GAAGA,EAAI,EACP,OACA,yBAAKd,QAAS,WAAKb,EAAM+B,OAAOJ,IAAIC,IAAKD,EAAGO,YAAa,kBAAKlC,EAAMmC,aAAaR,IAAIE,aAAYF,EAAG1B,MAAOD,EAAMC,MAAOO,UAAU,cAC9H,kBAAC,IAAD,CAAOsB,MAAOJ,EAAMI,c,ICgQnBM,E,4JA1QbC,MAAQ,CACNlC,OAAS,GACTmC,YAAc,CACZC,QAAS,EACTjC,YAAc,GACdkC,cAAgB,CACdC,QAAS,QAEXxB,YAAc,CACZM,KAAO,GACPX,KAAO,IAETD,aAAe,CACbY,KAAI,GACJX,KAAI,IAENX,MAAQ,CACNyC,QAAU,CACRjC,KAAM,CACJkC,QAAS,EACTC,cAAe,QAEjBlC,SAAU,CACRL,UAAU,oBACVsC,QAAS,IAEXnB,OAAQ,CACNnB,UAAU,qBACVsC,QAAS,IAGbJ,OAAS,CACP7B,SAAU,IAKZmC,SAAW,CACTpC,KAAM,CAEJkC,QAAS,EACTC,cAAe,QAEjBlC,SAAU,CACRL,UAAU,oBACVsC,QAAS,IAEXnB,OAAQ,CACNnB,UAAU,qBACVsC,QAAS,MAKjBG,KAAO,EAAK9C,MAAM8C,KAAKC,cACvBC,YAAc,GACdC,UAAY,CACVhD,MAAQ,K,EAQZiD,aAAe,SAAC3C,GACVA,IACFA,EAAQ,GAEV,IAAI+B,EAAc,EAAKD,MAAMC,YACvBC,GAAUD,EAAYC,OAC5BD,EAAYC,OAASA,EAClBA,GAEDD,EAAYrC,MAAMyC,QAAUJ,EAAYrC,MAAMsC,OAC9C,EAAKJ,aAAa5B,IAElB+B,EAAYrC,MAAMyC,QAAUJ,EAAYrC,MAAM4C,SAEhDM,QAAQC,IAAI,YACZD,QAAQC,IAAId,GACZ,EAAKe,SAAS,CAACf,iB,EA2BjBgB,SAAW,SAACC,EAAGC,GACb,IACE,OAAOD,IACP,MAAOzC,GACP,OAAO0C,I,EAIXC,WAAa,WACX,IAAIT,EAAc,EAAKX,MAAMW,YACvBU,EAAQ,EAAKJ,UAAS,kBAAKK,SAASC,cAAc,8BAA2B,GAChFF,IACDV,EAAYC,UAAY,CACtBY,EAAIH,EAAMI,aAEZ,EAAKT,SAAS,CAACL,gBAAa,WAE1B,EAAKe,Y,EAIXC,eAAiB,WACf,IAAI7D,EAAS,EAAKkC,MAAMlC,OACpB8D,EAAQ,GACZA,EAAMnC,MAAQ,EAAKO,MAAMS,KAAKoB,SAASC,MAAMC,MAAMtC,MACnDmC,EAAM1D,MAAQ,EAEdJ,EAAOkE,KAAKJ,GACT,EAAK5B,MAAMS,KAAKwB,WAAWlE,OAAS,GACrC,EAAKiC,MAAMS,KAAKwB,WAAW7C,KAAI,SAAC8C,EAAO5C,GACrC,IAAIsC,EAAQ,GACZA,EAAM1D,MAAQoB,EAAI,EAClBsC,EAAMnC,MAAQyC,EAAMJ,MAAMC,MAAMtC,MAChC3B,EAAOkE,KAAKJ,MAGhBd,QAAQC,IAAIjD,GACZ,EAAKkD,SAAS,CAAClD,WAAQ,WACrB,EAAKsD,iB,EAITtB,aAAc,SAAC5B,GACb,GAAGA,GAAS,GAAKA,EAAQ,EAAK8B,MAAMlC,OAAOC,OAAO,CAChD,IAAIkC,EAAc,EAAKD,MAAMC,YAC7BA,EAAYrB,YAAYM,KAAO,GAC/Be,EAAYrB,YAAYL,KAAO,GAC/B0B,EAAY3B,aAAaY,KAAzB,SACAe,EAAY3B,aAAaC,KAAzB,SACA0B,EAAYhC,YAAc,EAAK+B,MAAMlC,OAAOI,GAC/B,IAAVA,GACH+B,EAAYrB,YAAYL,KAAO,CAC7BgC,cAAgB,OAChBD,QAAS,IAEXL,EAAY3B,aAAaC,KAAzB,IAEUL,IAAU,EAAK8B,MAAMlC,OAAOC,OAAO,IAC3CkC,EAAYrB,YAAYM,KAAO,CAC7BqB,cAAgB,OAChBD,QAAS,IAEXL,EAAY3B,aAAaY,KAAzB,IAEF,EAAK8B,SAAS,CAACf,kB,EAInByB,KAAO,WACL,IAAML,EAAQ,EAAKrB,MAAMY,UACzBS,EAAMzD,MAAQ,CACZuE,OAAS,EAAKnC,MAAMW,YAAYC,UAAUY,GAE5C,EAAKR,SAAS,CAACK,W,oHAxHjBe,mBAAA,a,EAuBAC,kBAAA,WAAoB,IAAD,OACjBC,KAAKX,iBACLxC,OAAOoD,iBAAiB,UAAS,WAC/B,EAAKnB,gBAEPE,SAASiB,iBAAiB,UAAU,SAAC9D,GAChC,EAAKuB,MAAMC,YAAYC,QACxB,EAAKW,kBAGTS,SAASiB,iBAAiB,SAAS,SAAC9D,GAClCqC,QAAQC,IAAI,EAAKf,MAAMC,YAAYC,QAChC,EAAKF,MAAMC,YAAYC,SACP,KAAdzB,EAAE+D,QACH,EAAK1C,aAAa,EAAKE,MAAMC,YAAYhC,YAAYC,MAAQ,GACvC,KAAdO,EAAE+D,QACV,EAAK1C,aAAa,EAAKE,MAAMC,YAAYhC,YAAYC,MAAQ,GACvC,KAAdO,EAAE+D,SACV,EAAK3B,oB,EAmFf4B,OAAA,WAAU,IAAD,OAIDC,GAHgBJ,KAAKrB,UAAS,kBAAK,EAAKjB,MAAMlC,UAAO,GAG7CwE,KAAKrB,UAAS,kBAAK,EAAKjB,MAAMS,KAAKkC,OAAOC,OAAI,IACtDC,EAAQP,KAAKrB,UAAS,kBAAK,EAAKjB,MAAMS,KAAKkC,OAAOE,QAA1C,iBACRF,EAASD,EAAQ,uBAAGI,KAAMJ,EAAMK,OAAO,QAAQF,MAAOA,GAAQA,GAAjD,GACbG,EAAWV,KAAKrB,UAAS,kBAAK,EAAKjB,MAAMS,KAAKwC,SAASC,MAAM,SAAO,GAkBxE,OACE,yBAAK/E,UAAU,sBACb,kBAAC,EAAD,CAEE+B,OAAQoC,KAAKtC,MAAMmD,OACnBzD,OAAQ4C,KAAKzB,aACb/C,OAAQwE,KAAKtC,MAAMlC,OACnBG,YAAaqE,KAAKtC,MAAMC,YAAYhC,YACpCL,MAAO0E,KAAKtC,MAAMC,YAAYrC,MAAMyC,QACpC1B,YAAe2D,KAAKxC,aACpBlB,YAAe0D,KAAKtC,MAAMC,YAAYrB,YACtCN,aAAgBgE,KAAKtC,MAAMC,YAAY3B,aACvC2C,SAAYqB,KAAKrB,WAEnB,yBAAK9C,UAAU,sBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oBACb,yBAAKK,QAAS,WAAK,EAAKqC,aAAa,IAAMhB,YAAa,kBAAI,EAAKC,aAAa,IAAIP,IAAK,EAAGC,aAAY,EAAG5B,MAAO0E,KAAKtC,MAAMY,UAAUhD,MAAOO,UAAU,yBACpJ,kBAAC,IAAD,CAAOsB,MAAO6C,KAAKtC,MAAMS,KAAKoB,SAASC,MAAMC,MAAMtC,SAErD,kBAAC,EAAD,CACEC,OAAU4C,KAAKzB,aACfjB,cAAiB0C,KAAKrB,UAAS,kBAAK,EAAKjB,MAAMlC,SAAO,IACtDgC,aAAgBwC,KAAKxC,aACrBlC,MAAS0E,KAAKtC,MAAMY,UAAUhD,WAOtC,yBAAKO,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gBACb,4BAAI,0BAAMA,UAAU,gBAAgBmE,KAAKtC,MAAMS,KAAK2C,YAAYP,OAAhE,IAA+EP,KAAKtC,MAAMS,KAAKoC,OAC/F,uBAAG1E,UAAU,kBAAiB,yCAA9B,IAAqDmE,KAAKtC,MAAMS,KAAK4C,OAAOR,OAC3EF,GAEH,yBAAKxE,UAAU,qBAvDtB6E,EAED,yBAAK7E,UAAU,gBACd6E,EAAS5D,KAAI,SAACkE,EAAEhE,GAAH,OACZ,uBAAGC,IAAKD,GAAIgE,OAKN,IAiDA,yBAAKnF,UAAU,c,GA7PPoF,IAAMC,WCP5B,sCAMO,IAAMC,EAAK,YAuCH,0BAAGhD,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAGEiD,UAAU,UAEVC,WAAW,EACXC,SAAU,SACVnD,KAAM,kBAAC,EAAD,CAASA,KAAMA,KAET,4BAAKA,EAAKC,cAAcmC","file":"component---src-templates-project-js-b2b889102fd5c6510912.js","sourcesContent":["\nimport React from \"react\"\n// import { Slide } from 'react-slideshow-image'\nimport Image from 'gatsby-image'\n\n\n\nconst ImageSlider = (props) => {\n    // const transition = props.transition;\n    let style = {\n      width: `${props.slides.length}00vw`,\n      transform: `translateX(-${props.activeSlide.index * 100}vw)`,\n    }\n\n   \n    return(\n      <div className=\"slider-wrapper\" style={props.style.main}>\n        <div className=\"slider-inner\">\n          <div className=\"arrow-container\" style={props.style.underlay}>\n            <div className={\"button-wrap-outer button-prev \"+props.arrowClasses.prev} >\n              <div className=\"button-wrap-inner\">\n              <button  onClick={(e)=>{ e.preventDefault();props.changeSlide(props.activeSlide.index - 1)}} className=\"arrow-left\" style={props.arrowStyles.prev}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\"><defs></defs><title>arrow_prev</title><path className=\"cls-1\" d=\"M88.5,250l323-234.47L196.5,250l215,234.47Z\"/></svg>\n              </button>\n              </div>        \n              <div className=\"arrow-streak\"></div>\n            </div>\n            <div className={\"button-wrap-outer button-next \"+ props.arrowClasses.next}>\n            <div className=\"arrow-streak\"></div>\n            <div className=\"button-wrap-inner\">\n              <button onClick={(e)=>{e.preventDefault();props.changeSlide(props.activeSlide.index + 1)}} className=\"arrow-right\" style={props.arrowStyles.next}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\"><defs></defs><title>arrow_next</title><path className=\"cls-1\" d=\"M411.5,250,88.5,484.47,303.5,250,88.5,15.53Z\"/></svg>\n              </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"slide-window\" style={props.style.window}>\n          <div className=\"slide-container\" style={style}>\n          \n          {props.slides.map((photo, i )=>(\n            <div key={i} data-index={i} className=\"project-slide-wrap\">\n            <div className=\"slide-wrap-inner\">\n              <Image fluid={photo.fluid}></Image> \n            </div>\n        </div>\n\n        ))}\n      </div>\n      </div>\n      </div>\n      <div onClick={props.toggle} style={props.style.underlay}  className=\"slider-underlay\"></div>\n    </div>\n    )\n  }\n\n\n\nexport default ImageSlider; \n  \n","\nimport React from \"react\"\n// import { Slide } from 'react-slideshow-image'\nimport Image from 'gatsby-image'\n\n\n\nconst PhotoGrid = (props) => {\n    // console.log(props.photoGridData)\n    // const photoGrid = buildPhotoGrid();\n    return(\n          <div className=\"photo-grid\">  \n        {props.photoGridData.map((photo, i)=>{\n          // const j = parseFloat(i+1);\n          // console.log(photo)\n          if(i > 0){\n          return(\n          <div onClick={()=>{props.toggle(i)}}key={i} onMouseOver={()=> props.changeSlides(i)} data-index={i} style={props.style} className=\"slide-wrap\">\n              <Image fluid={photo.fluid}/>\n          </div>\n          )}})}\n  \n        </div>\n    )\n  }\n\n\nexport default PhotoGrid; \n  \n","import React from 'react'\nimport Image from 'gatsby-image'\nimport ImageSlider from './imageSlider'\nimport PhotoGrid from './photoGrid'\n\n\n//  const Layout = ({children}) => {\nclass Project extends React.Component{\n  state = {\n    slides : [],\n    imageSlider : {\n      active : false,\n      activeSlide : {},\n      inactiveStyle : {\n        display: 'none'\n      },\n      arrowStyles : {\n        next : {},\n        prev : {}\n      },\n      arrowClasses : {\n        next : ``,\n        prev : ``\n      },\n      style : {\n        current : {\n          main: {\n            opacity: 0,\n            pointerEvents: \"none\"\n          },\n          underlay :{\n            transform: `translateY(100vh)`,\n            opacity: 0.8,\n          },\n          window :{\n            transform: `translateY(-100vh)`,\n            opacity: 0\n          }\n        },\n        active : {\n          underlay :{\n            // transform: `translateY(100vh)`,\n            // opacity: 0,\n          }\n        },\n        inactive : {\n          main: {\n            // display: 'none',\n            opacity: 0,\n            pointerEvents: \"none\"\n          },\n          underlay :{\n            transform: `translateY(100vh)`,\n            opacity: 0.4,\n          },\n          window :{\n            transform: `translateY(-100vh)`,\n            opacity: 0\n          }\n        }\n      }\n    },\n    data : this.props.data.sanityProject,\n    dimmensions : {},\n    thumbnail : {\n      style : {}\n    },\n  }\n  \n  componentDidUpdate(){\n   \n  }\n  \n  toggleSlider = (index) => {\n    if(!index){\n      index = 0\n    }\n    let imageSlider = this.state.imageSlider;\n    const active = !imageSlider.active;\n    imageSlider.active = active;\n    if(active){\n      // imageSlider.style = imageSlider.activeStyle\n      imageSlider.style.current = imageSlider.style.active;\n      this.changeSlides(index)\n    } else {\n      imageSlider.style.current = imageSlider.style.inactive;\n    }\n    console.log(\"hi there\")\n    console.log(imageSlider)\n    this.setState({imageSlider})\n  }\n  \n  componentDidMount(){\n    this.buildSlidesArr()\n    window.addEventListener(\"resize\",()=>{\n      this.handleDims()\n    });\n    document.addEventListener(\"scroll\", (e)=>{\n      if(this.state.imageSlider.active){\n        this.toggleSlider();\n      }\n    })\n    document.addEventListener(\"keyup\", (e)=>{\n      console.log(this.state.imageSlider.active);\n      if(this.state.imageSlider.active){\n        if(e.keyCode === 37){\n          this.changeSlides(this.state.imageSlider.activeSlide.index - 1);\n        } else if(e.keyCode === 39){\n          this.changeSlides(this.state.imageSlider.activeSlide.index + 1);\n        } else if(e.keyCode === 27){\n          this.toggleSlider();\n        }\n      }\n    })\n\n  }\n  checkVar = (a, b) => {\n    try{\n      return a()\n    } catch (e) {\n      return b\n    }\n  }\n\n  handleDims = () =>{\n    let dimmensions = this.state.dimmensions;\n    const thumb = this.checkVar(()=> document.querySelector(\".photo-grid .slide-wrap\"),false)\n    if(thumb){\n      dimmensions.thumbnail = {\n        w : thumb.offsetWidth\n      }\n      this.setState({dimmensions},()=>{\n        //dimmension dependent callbacks\n        this.wToH()\n      })\n    }\n  }\n  buildSlidesArr = () => {\n    let slides = this.state.slides;\n    let slide = {}\n    slide.fluid = this.state.data.imgImage.local.asset.fluid;\n    slide.index = 0;\n    // slide.active = false;\n    slides.push(slide);\n    if(this.state.data.imgGallery.length > 0){\n      this.state.data.imgGallery.map((image, i)=>{\n        let slide = {}\n        slide.index = i + 1\n        slide.fluid = image.local.asset.fluid\n        slides.push(slide)\n      })\n    }\n    console.log(slides);\n    this.setState({slides},()=>{\n      this.handleDims()\n    })\n  }\n\n  changeSlides =(index) => {\n    if(index >= 0 && index < this.state.slides.length){\n      let imageSlider = this.state.imageSlider;\n      imageSlider.arrowStyles.next = {};\n      imageSlider.arrowStyles.prev = {};\n      imageSlider.arrowClasses.next = `active`;\n      imageSlider.arrowClasses.prev = `active`;\n      imageSlider.activeSlide = this.state.slides[index];\n      if(index === 0){\n      imageSlider.arrowStyles.prev = {\n        pointerEvents : 'none',\n        opacity: 0.1\n      }\n      imageSlider.arrowClasses.prev = ``\n\n      } else if(index === this.state.slides.length-1){\n        imageSlider.arrowStyles.next = {\n          pointerEvents : 'none',\n          opacity: 0.1\n        }\n        imageSlider.arrowClasses.next = ``\n      }\n      this.setState({imageSlider});\n    }\n  }\n\n  wToH = () => {\n    const thumb = this.state.thumbnail;\n    thumb.style = {\n      height : this.state.dimmensions.thumbnail.w\n    }\n    this.setState({thumb})\n\n  }\n\nrender() {\n  const photoGridData = this.checkVar(()=> this.state.slides,false);\n\n\n  const link =  this.checkVar(()=> this.state.data.exLink.url,false);\n  const title = this.checkVar(()=> this.state.data.exLink.title, `Visit Website`);\n  const exLink = link ? (<a href={link} target=\"blank\" title={title}>{title}</a>) : ``\n  const bodyData = this.checkVar(()=> this.state.data._rawBody.split('\\n'), false);\n  const body = () => {\n    if(bodyData){\n      return(\n      <div className=\"project-body\">\n      {bodyData.map((p,i)=>(\n        <p key={i}>{p}</p>\n        \n      ))}\n      </div>\n      )} else {\n        return ``;\n      }\n  }\n  // const techData = this.state.data.\n  \n\n\n    return ( \n      <div className=\"project-wrap-outer\">\n        <ImageSlider\n          // properties = {this.state.imageSlider}\n          active={this.state.slider}\n          toggle={this.toggleSlider}\n          slides={this.state.slides}\n          activeSlide={this.state.imageSlider.activeSlide}\n          style={this.state.imageSlider.style.current}\n          changeSlide = {this.changeSlides}\n          arrowStyles = {this.state.imageSlider.arrowStyles}\n          arrowClasses = {this.state.imageSlider.arrowClasses}\n          checkVar = {this.checkVar}\n        />\n        <div className=\"project-wrap-inner\">\n          <div className=\"project-left\">\n            <div className=\"photo-grid-wrap\">\n              <div className=\"photo-grid-inner\">\n                <div onClick={()=>{this.toggleSlider(0)}}  onMouseOver={()=>this.changeSlides(0)} key={1} data-index={0} style={this.state.thumbnail.style} className=\"slide-wrap feat-image\">\n                  <Image fluid={this.state.data.imgImage.local.asset.fluid}/>\n                </div>\n                <PhotoGrid\n                  toggle = {this.toggleSlider}\n                  photoGridData = {this.checkVar(()=> this.state.slides,[])}\n                  changeSlides = {this.changeSlides}\n                  style = {this.state.thumbnail.style}\n                />\n              </div>\n            </div>\n\n\n          </div>\n          <div className=\"project-right\">\n            <div className=\"project-right-inner\">\n              <div className=\"project-head\">\n                <h1><span className=\"project-type\">{this.state.data.projectType.title}</span> {this.state.data.title}</h1>\n                <p className=\"project-client\"><label>Client</label> {this.state.data.client.title}</p>\n                {exLink}\n              </div>\n              <div className=\"project-body-wrap\">\n              {body()}\n              </div>\n              <div className=\"tech\">\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      \n    )\n  }\n}\n\n\nexport default Project\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/layout\"\nimport Project from \"../components/project\"\n\n\nexport const query = graphql`\n    query ($slug : String) {\n        sanityProject(slug : {current : {eq : $slug}}){\n          title\n          projectType {\n            title\n          }\n          client {\n            title\n          }\n          _rawBody\n          exLink{\n            title\n            url\n          }\n          imgImage {\n            _key\n            local {\n              asset {\n                fluid{\n                  ...GatsbySanityImageFluid\n                }\n              }\n            }\n          }\n          imgGallery{\n            _key\n            local{\n              asset {\n                fluid {\n                  ...GatsbySanityImageFluid\n                }\n              }\n            }\n          }\n        }\n      }   \n  `\n\nexport default ({ data }) => (\n      <Layout\n        // pathname={window.location.pathname}\n        // search={window.location.search}\n        bodyClass=\"project\"\n        \n        coverPage={false}\n        homeLink={'/?home'}\n        data={<Project data={data}/>}\n      >\n                    <h1>{data.sanityProject.title}</h1>\n\n      </Layout>\n  )\n\n  "],"sourceRoot":""}